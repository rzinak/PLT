; the sine of an angle (specified in radians) can be computed by making use of the approximation sin x ~= x if x is sufficiently small,
; and the trigonometric identity [formula here, ofc i aint typing it] to reduce the size of the argument of sin.  
; (for purposes of this exercise an angle is considered ``sufficiently small'' if its magnitude is not greater than 0.1 radians.) 
; these ideas are incorporated in the following procedures:
;
;
(define (cube x) (* x x x))
(define (p x) (- (* 3 x) (* 4 (cube x))))
(define (sine angle)
  (if (not (> (abs angle) 0.1))
    angle
    (p (sine (/ angle 3.0)))))
;
; a. how many times is the procedure p applied when (sine 12.15) is evaluated?
; b. what is the order of growth in space and number of steps (as a function of a) used by the process generated by the sine
; procedure when (sine a) is evaluated?

; abstracting procedure

(sine 12.15) -> angle is 12.15

(if (not (> (abs angle) 0.1)))
(if (not (> 12.15 0.1))) -> #f, then executes the else block

(p (sine (/ angle 3.0)))
(p (sine (/ 12.15 3.0)))
(p (p (sine (/ 4.05 3.0))))
(p (p (p (sine (/ 1.349 3.0)))))
(p (p (p (p (sine (/ 0.449 3.0))))))
(p (p (p (p (p (sine (/ 0.149 3.0)))))))
(p (p (p (p (p 0.049))))) -> now this shit is small enough for the base case, then calls p
(p (p (p (p 0.142)))) ; (im making the evalutions of p below)
(p (p (p 0.418)))
(p (p 0.974))
(p -0.758) => -0.48

; p for reference
; (define (p x) (- (* 3 x) (* 4 (cube x))))

; p evaluations (gonna put it below here to not make sine big af)

p => (p 0.049) (- (* 3 0.049) (* 4 (cube 0.049))))
p => (p 0.049) (- (* 3 0.049) (* 4 0.000125)))
p => (p 0.049) (- (* 3 0.049) 0.005))
p => (p 0.049) (- 0.147 0.005))
p => (p 0.049) -> 0.142

p => (p 0.142) (- (* 3 0.142) (* 4 (cube 0.142))))
p => (p 0.142) (- (* 3 0.142) (* 4 0.002)))
p => (p 0.142) (- (* 3 0.142) 0.008))
p => (p 0.142) (- 0.426 0.008))
p => (p 0.142) -> 0.418

p => (p 0.418) (- (* 3 0.418) (* 4 (cube 0.418))))
p => (p 0.418) (- (* 3 0.418) (* 4 0.07)))
p => (p 0.418) (- (* 3 0.418) 0.28))
p => (p 0.418) (- 1.254 0.28))
p => (p 0.418) -> 0.974

p => (p 0.974) (- (* 3 0.974) (* 4 (cube 0.974))))
p => (p 0.974) (- (* 3 0.974) (* 4 0.92)))
p => (p 0.974) (- (* 3 0.974) 3.68))
p => (p 0.974) (- 2.9 3.68))
p => (p 0.974) -> âˆ’0.758

p => (p -0.758) (- (* 3 -0.758) (* 4 (cube -0.758))))
p => (p -0.758) (- (* 3 -0.758) (* 4 -0.43)))
p => (p -0.758) (- (* 3 -0.758) -1.72))
p => (p -0.758) (- -2.22 -1.72))
p => (p -0.758) -> -0.48

; ANSWERS:
; 
; a. 5 times
; b. O(log(a))
